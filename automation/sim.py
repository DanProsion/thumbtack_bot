import requests
from config import API_KEY_SIM
import phonenumbers
from phonenumbers import geocoder
import time

async def buy_usa_other_number(bot, user_id, max_attempts=20, delay=3):
    headers = {
        'Authorization': f'Bearer {API_KEY_SIM}',
        'Accept': 'application/json'
    }

    try:
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å
        balance_resp = requests.get('https://5sim.net/v1/user/profile', headers=headers)
        balance_resp.raise_for_status()
        profile = balance_resp.json()
        balance = profile.get('balance', 0)
        print(f"–¢–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance}")

    except Exception as e:
        return await bot.send_message(user_id, f"‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏ –±–∞–ª–∞–Ω—Å: {e}")

    # 2. –ü–æ–∫—É–ø–∫–∞ –Ω–æ–º–µ—Ä–∞
    for attempt in range(1, max_attempts + 1):
        try:
            # 1) –ü–æ–∫—É–ø–∞–µ–º –Ω–æ–º–µ—Ä
            buy_url = 'https://5sim.net/v1/user/buy/activation/usa/any/other'
            buy_resp = requests.get(buy_url, headers=headers)
            buy_resp.raise_for_status()
            order = buy_resp.json()
            raw_phone = order.get('phone')
            order_id = order.get('id')

            print(f"[{attempt}] ‚úÖ –ö—É–ø–ª–µ–Ω –Ω–æ–º–µ—Ä: {raw_phone} (order id {order_id})")

            # 2) –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ US-–Ω–æ–º–µ—Ä
            num = phonenumbers.parse(raw_phone, None)
            country_code = geocoder.region_code_for_number(num)
            if country_code == 'US':
                print(f"[{attempt}] üéâ –ù–æ–º–µ—Ä –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –∏–∑ –°–®–ê.")
                return order

            # 3) –ï—Å–ª–∏ –Ω–µ US ‚Äî –æ—Ç–º–µ–Ω—è–µ–º –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞
            print(f"[{attempt}] ‚ö†Ô∏è –ù–æ–º–µ—Ä –∏–∑ {country_code}, –∞ –Ω–µ –∏–∑ US, –æ—Ç–º–µ–Ω—è–µ–º –∑–∞–∫–∞–∑ –∏ –ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞‚Ä¶")
            cancel_url = f'https://5sim.net/v1/user/cancel/{order_id}'
            cancel_resp = requests.get(cancel_url, headers=headers)
            cancel_resp.raise_for_status()
            print(f"[{attempt}] ‚úÖ –ó–∞–∫–∞–∑ {order_id} –æ—Ç–º–µ–Ω—ë–Ω.")

        except requests.HTTPError as http_e:
            print(f"[{attempt}] ‚ùå HTTPError –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ/–æ—Ç–º–µ–Ω–µ: {http_e}")
        except Exception as e:
            print(f"[{attempt}] ‚ùå –û–±—â–∞—è –æ—à–∏–±–∫–∞: {e}")

        # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ –Ω–æ–≤–æ–π –ø–æ–ø—ã—Ç–∫–æ–π
        time.sleep(delay)

        # –ï—Å–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –∏—Å—á–µ—Ä–ø–∞–Ω—ã
    await bot.send_message(
        user_id,
        f"üö´ –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–º–µ—Ä–∏–∫–∞–Ω—Å–∫–∏–π –Ω–æ–º–µ—Ä –∑–∞ {max_attempts} –ø–æ–ø—ã—Ç–æ–∫."
    )
    return None

def get_sms_code(phone_id, max_attempts=30, delay=5):
    """
    –û–∂–∏–¥–∞–µ—Ç SMS –¥–ª—è –∑–∞–∫–∞–∑–∞ order_id –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–¥ –∏–∑ –ø–µ—Ä–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.
    :param order_id: int –∏–ª–∏ str ‚Äî ID –∑–∞–∫–∞–∑–∞, –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø—Ä–∏ buy.
    :param max_attempts: —Å–∫–æ–ª—å–∫–æ —Ä–∞–∑ –æ–ø—Ä–∞—à–∏–≤–∞—Ç—å API –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º.
    :param delay: –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö.
    :return: str with code –∏–ª–∏ None, –µ—Å–ª–∏ —Å–º—Å –Ω–µ –ø—Ä–∏—à–ª–æ.
    """
    headers = {
        'Authorization': f'Bearer {API_KEY_SIM}',
        'Accept': 'application/json'
    }
    check_url = f'https://5sim.net/v1/user/check/{phone_id}'

    for attempt in range(1, max_attempts + 1):
        print("phone_id:", phone_id)
        try:
            resp = requests.get(check_url, headers=headers)
            resp.raise_for_status()
            data = resp.json()
            sms_list = data.get('sms') or data.get('smssms')  # –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞ –∑–∞–∫–∞–∑–∞
            if sms_list:
                # –û–±—ã—á–Ω–æ sms_list ‚Äî —Å–ø–∏—Å–æ–∫ dict —Å –ø–æ–ª—è–º–∏ 'code' –∏ 'text'
                first = sms_list[0]
                code = first.get('code') or first.get('text')
                print(f"[{attempt}] ‚úÖ –ü–æ–ª—É—á–µ–Ω–æ SMS: {first}")
                return code
            else:
                print(f"[{attempt}] ‚ö†Ô∏è –ï—â—ë –Ω–µ—Ç SMS, —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞: {data.get('status')}")
        except Exception as e:
            print(f"[{attempt}] ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ SMS: {e}")
        time.sleep(delay)

    print(f"üö´ –ó–∞ {max_attempts} –ø–æ–ø—ã—Ç–æ–∫ SMS –Ω–µ –ø—Ä–∏—à–ª–æ.")
    return None

